{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/backup-av-dockerisert-postgresql-db/","result":{"data":{"site":{"siteMetadata":{"title":"michaelsimsoe.no"}},"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Backup av Postgres fra docker\",\n  \"date\": \"2020-09-03T23:00:00.000Z\",\n  \"updated\": \"2020-09-03T23:00:00.000Z\",\n  \"description\": \"Backup av dokerisert Posgresql database i et Ruby on Rails prosjekt og deretter importere tilbake data.\",\n  \"slug\": \"backup-av-dockerisert-postgresql-db\",\n  \"tags\": [\"postgresql\", \"docker\", \"devops\", \"Ruby on Rails\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Backup og import av data med Posgresql og Docker\"), mdx(\"p\", null, \"Trengte data fra produksjon og ned til utviklingsmilj\\xF8et. Trengte ogs\\xE5 \\xE5 vite hvordan jeg kunen ta backup av databasen. L\\xF8ste det slik:\"), mdx(\"h3\", null, \"Logger p\\xE5 digitalocean droplet\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"docker exec <postgres_container_name> pg_dump -F t  -U postgres <database_name> > backup.tar\\n\")), mdx(\"h3\", null, \"Kopierer dump ned lokalt\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"rsync -avz <brukernavn>@<ip til droplet>:./backup.tar <der du vil ha den lokalt>\\n\")), mdx(\"h3\", null, \"Kopierer fil inn i kj\\xF8rende db-container lokalt\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"docker cp <plassering lokalt> <containernavn/id>:/<plassering i container>\\n\")), mdx(\"h3\", null, \"Dropper db i rails og creater p\\xE5 nytt\"), mdx(\"br\", null), mdx(\"h3\", null, \"Kj\\xF8rer pg_restore i container\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"docker exec <containernavn> pg_restore -U <db brukernavn> -d <db navn> backup.tar\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","id":"7a7d6124-bc5f-5ac6-91a2-1e5a917ab076","excerpt":"Backup og import av data med Posgresql og Docker Trengte data fra produksjon og ned til utviklingsmiljøet. Trengte også å vite hvordan jeg kunen ta backup av…","timeToRead":1,"frontmatter":{"title":"Backup av Postgres fra docker","date":"03.09.2020","updated":"03.09.2020","description":"Backup av dokerisert Posgresql database i et Ruby on Rails prosjekt og deretter importere tilbake data.","tags":["postgresql","docker","devops","Ruby on Rails"],"heroimage":null}}},"pageContext":{"slug":"/backup-av-dockerisert-postgresql-db/","previous":{"fields":{"slug":"/hva-er-webpack-en-introduksjon/"},"frontmatter":{"title":"Hva er webpack? En introduksjon"}},"next":null}}}